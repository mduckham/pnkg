@prefix rml: <http://semweb.mmlab.be/ns/rml#>.
@prefix rr: <http://www.w3.org/ns/r2rml#>.
@prefix ql: <http://semweb.mmlab.be/ns/ql#>.
@prefix pa: <http://linked.data.gov.au/def/placenames/>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix geo: <http://www.opengis.net/ont/geosparql#> .
@prefix fnml: <http://semweb.mmlab.be/ns/fnml#> .
@prefix fno:  <https://w3id.org/function/ontology#> .
@prefix grel:    <http://users.ugent.be/~bjdmeest/function/grel.ttl#> .
@prefix grelm:   <http://fno.io/grel/rmlmapping#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix vc: <http://www.w3.org/2006/vcard/ns#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix prov: <http://www.w3.org/ns/prov#> .
@prefix fsdf: <http://linked.data.gov.au/def/fsdf/> .
@prefix dcat: <http://www.w3.org/ns/dcat#> .
@prefix dqv: <http://www.w3.org/ns/dqv#> .
@prefix gkl_gaz: <http://example.com/ns/gazetteer#> .
@prefix loci: <http://linked.data.gov.au/def/loci#> .
@prefix ex: <http://example.com/ns#>.
@base <http://example.com/ns#>.

<#SA_GazetteerSites2020_DS>
  rml:source "./examples/OGC/SA/SA_sampleGazetteerSites_GDA2020.geojson" ;
  rml:referenceFormulation ql:JSONPath ;
  rml:iterator "$".

<#SA_GeoFeatures_GazetteerSites2020_DS>
  rml:source "./examples/OGC/SA/SA_sampleGazetteerSites_GDA2020.geojson" ;
  rml:referenceFormulation ql:JSONPath ;
  rml:iterator "$.features[*]".

## CSV with Geometry in WKT
<#SA_SitesSource> a rml:LogicalSource ;
    rml:source "./examples/OGC/SA/sites.csv" ;
    rml:referenceFormulation ql:CSV ;
    rml:iterator "$" .

## CSV with metadata for SA
<#SA_SitesMetaDataSource> a rml:LogicalSource ;
    rml:source "./examples/OGC/meta_data_SA.csv" ;
    rml:referenceFormulation ql:CSV ;
    rml:iterator "$" .

################################## MetaData Mapping ##################################
<#MetaDataMapping> a rr:TriplesMap;
   rml:logicalSource <#SA_SitesMetaDataSource>;

rr:subjectMap [
    rr:template "http://example.com/{State}/MetaData/ds_{DatasetNumber}";
    rr:class dcat:DataSet;
  ];
  
#User defined data property
  rr:predicateObjectMap [
    rr:predicate dcterms:title;
    rr:objectMap [
      rml:reference "Title"
    ]
  ] ;

#User defined data property
  rr:predicateObjectMap [
    rr:predicate dcterms:description;
    rr:objectMap [
      rml:reference "Description"
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate fsdf:hasCustodian;
    rr:objectMap [
       rr:parentTriplesMap <#MetaDataCustodianMapping> ;  
    ]
  ];

#User defined data property
  rr:predicateObjectMap [
    rr:predicate gkl_gaz:meta_data_usage;
    rr:objectMap [
      rml:reference "Usage"
    ]
  ];

#User defined data property
  rr:predicateObjectMap [
    rr:predicate gkl_gaz:dataset_geographic_extent;
    rr:objectMap [
      rml:reference "GeographicExtent";
      rr:datatype xsd:string
    ]
  ];

#User defined data property
  rr:predicateObjectMap [
    rr:predicate gkl_gaz:dataset_geographic_min_long;
    rr:objectMap [
      rml:reference "GeographExtentMinEastingOrLongitude";
      rr:datatype xsd:string
    ]
  ];

#User defined data property
  rr:predicateObjectMap [
    rr:predicate gkl_gaz:dataset_geographic_min_long;
    rr:objectMap [
      rml:reference "GeographExtentMinEastingOrLongitude";
      rr:datatype xsd:string
    ]
  ];

#User defined data property
  rr:predicateObjectMap [
    rr:predicate gkl_gaz:dataset_geographic_min_lat;
    rr:objectMap [
      rml:reference "GeographExtentMinNorthingOrLatitude";
      rr:datatype xsd:string
    ]
  ];

#User defined data property
  rr:predicateObjectMap [
    rr:predicate gkl_gaz:dataset_geographic_max_long;
    rr:objectMap [
      rml:reference "GeographExtentMaxEastingOrLongitude";
      rr:datatype xsd:string
    ]
  ];

#User defined data property
  rr:predicateObjectMap [
    rr:predicate gkl_gaz:dataset_geographic_max_lat;
    rr:objectMap [
      rml:reference "GeographExtentMaxNorthingOrLatitude";
      rr:datatype xsd:integer
    ]
  ];

#User defined data property
  rr:predicateObjectMap [
    rr:predicate gkl_gaz:dataset_acquiredon;
    rr:objectMap [
      rml:reference "DatasetAcquiredOn";
      rr:datatype xsd:Date
    ]
  ];

#User defined data property
  rr:predicateObjectMap [
    rr:predicate gkl_gaz:dataset_updatefrequency;
    rr:objectMap [
      rml:reference "UpdateFrequency";
      rr:datatype xsd:string
    ]
  ];

#User defined data property
  rr:predicateObjectMap [
    rr:predicate gkl_gaz:dataset_maintenance_method;
    rr:objectMap [
      rml:reference "DatasetMaintenanceMethod";
      rr:datatype xsd:string
    ]
  ];
  
## Map DataQuality-Completeness
rr:predicateObjectMap [
    rr:predicate dqv:hasQualityMeasurement;
       rr:objectMap [
       rr:parentTriplesMap <#MetaDataQualityCompletenessMapping> ;  
    ]
  ];
  
## Map DataQuality - Positional Accuracy
rr:predicateObjectMap [
    rr:predicate dqv:hasQualityMeasurement;
       rr:objectMap [
       rr:parentTriplesMap <#MetaDataQualityPositionalAccuracyMapping> ;  
    ]
  ];
  
rr:predicateObjectMap [
    rr:predicate vc:Kind ;
       rr:objectMap [
       rr:parentTriplesMap <#MetaDataOrganizationMapping> ;  
    ]
  ].
 
<#MetaDataCustodianMapping>
  rml:logicalSource <#SA_SitesMetaDataSource>;
 rr:subjectMap [
    rr:template "http://example.com/{State}/MetaData/Custodian";
    rr:class fsdf:Agency
  ];

#User defined data property
  rr:predicateObjectMap [
    rr:predicate gkl_gaz:CustodianDataAuthority;
    rr:objectMap [
      rml:reference "Custodian_DataAuthority"
    ]
  ];

#User defined data property
 rr:predicateObjectMap [
    rr:predicate gkl_gaz:CustodianDataProvider;
    rr:objectMap [
      rml:reference "Custodian_DataProvider"
    ]
  ].

 <#MetaDataOrganizationMapping>
  rml:logicalSource <#SA_SitesMetaDataSource>;
 
  rr:subjectMap [
    rr:template "http://example.com/{State}/MetaData/Organization";
    rr:class prov:Organization
  ];

  rr:predicateObjectMap [
    rr:predicate vc:organization-name;
    rr:objectMap [
      rml:reference "Organization";
      rr:datatype xsd:string
    ]
  ];
  
  # Mapping the email as an object property
  rr:predicateObjectMap [
    rr:predicate vc:hasEmail ; 
    rr:objectMap [
      rml:reference "Email" ;  
      rr:datatype xsd:string
        ] 
    ];
    
  rr:predicateObjectMap [
    rr:predicate vc:street-address;
    rr:objectMap [
      rml:reference "OrganizationPostalAddress";
      rr:datatype xsd:string
    ]
  ].

 <#MetaDataQualityCompletenessMapping>
  rml:logicalSource <#SA_SitesMetaDataSource>;
 
  rr:subjectMap [
    rr:template "http://example.com/{State}/MetaData/Quality/Completeness";
    rr:class dqv:QualityMeasurement
  ];
  
  rr:predicateObjectMap [
  rr:predicate dqv:value;
  rr:objectMap [
      rml:reference "DataQualityCompleteness";
      rr:datatype xsd:string
    ]
   ].


 <#MetaDataQualityPositionalAccuracyMapping>
  rml:logicalSource <#SA_SitesMetaDataSource>;
 
  rr:subjectMap [
    rr:template "http://example.com/{State}/MetaData/Quality/PositionalAccuracy";
    rr:class dqv:QualityMeasurement
  ];
  
  rr:predicateObjectMap [
  rr:predicate dqv:value;
  rr:objectMap [
      rml:reference "DataQualityPositionalAccuracy";
      rr:datatype xsd:string
    ]
   ].

############################################################################################
##################### Geometry Mapping ######################################
<#GeometryMapping> a rr:TriplesMap;
 rml:logicalSource <#SA_SitesSource>;

rr:subjectMap [
   rr:template "http://example.com/SA/Geometry/point/{recno}";
   rr:class pa:Geometry;
 ];

rr:predicateObjectMap [
  rr:predicate geo:asWKT;
  rr:objectMap [
    rml:reference "WKT";
    rr:datatype geo:wktLiteral;
  ]
].

##################### Geo-Feature Mapping ###################################
<#GeoFeatureMapping> a rr:TriplesMap;
 rml:logicalSource <#SA_GeoFeatures_GazetteerSites2020_DS>;

rr:subjectMap [
   rr:template "http://example.com/SA/GeoFeature/{properties.recno}";
   rr:class pa:Feature;
  ];
 
 rr:predicateObjectMap [
  rr:predicate pa:hasGeometry;
  rr:objectMap [
    rr:parentTriplesMap <#GeometryMapping>;
    rr:joinCondition [
      rr:child "properties.recno";
      rr:parent "recno"
      ];
      ];
  ].

####################### Place Mapping #####################################
<#PlaceMapping> a rr:TriplesMap;
 rml:logicalSource <#SA_GeoFeatures_GazetteerSites2020_DS>;

rr:subjectMap [
   rr:template "http://example.com/SA/Place/{properties.recno}";
   rr:class pa:Place, geo:Feature;
 ];

rr:predicateObjectMap [
    rr:predicate dcterms:identifier;
     rr:objectMap [
       rml:reference "properties.recno"
   ]
 ];

 rr:predicateObjectMap [
  rr:predicate pa:hasGeometry;
  rr:objectMap [
    rr:parentTriplesMap <#GeometryMapping>;
    rr:joinCondition [
      rr:child "properties.recno";
      rr:parent "recno"
      ];
      ]
  ];

   # place classification
    rr:predicateObjectMap [
        rr:predicate pa:hasPlaceClassification ;
        rr:objectMap [
            rr:template "http://pid.geoscience.gov.au/def/voc/ga/PlaceType/{properties.feature_category}"
        ]
    ] ;

    rr:predicateObjectMap [
        rr:predicate pa:hasPlaceClassification ;
        rr:objectMap [
            rr:template "http://pid.geoscience.gov.au/def/voc/ga/PlaceType/{properties.feature_type}"
        ]
    ] ;

    rr:predicateObjectMap [
        rr:predicate pa:hasPlaceClassification ;
        rr:objectMap [
            rr:template "http://pid.geoscience.gov.au/def/voc/ga/PlaceType/{properties.feature_sub_type}"
        ]
    ] ;

  rr:predicateObjectMap [
  rr:predicate pa:hasPlaceName;
  rr:objectMap [
    rr:parentTriplesMap <#PlaceNamesMapping>;
    rr:joinCondition [
      rr:child "properties.recno";
      rr:parent "properties.recno"
      ];
      ];
  ].
  
######################### Place Name Mapping ##############################################
<#PlaceNamesMapping> a rr:TriplesMap;
   rml:logicalSource <#SA_GeoFeatures_GazetteerSites2020_DS>;

rr:subjectMap [
    rr:template "http://example.com/SA/PlaceNames/{properties.recno}";
    rr:class pa:OfficialPlaceName, pa:PlaceName ;
  ];

 rr:predicateObjectMap [
  rr:predicate dcterms:identifier;
  rr:objectMap [
    rml:reference "properties.recno"
   ]
];

 rr:predicateObjectMap [
  rr:predicate loci:isMemberOf ;
  rr:objectMap[
    rr:IRI gkl_gaz:gazetteer_sa;
    ]
  ] ;

  rr:predicateObjectMap [
    rr:predicate pa:dateGazetted;
    rr:objectMap [
      rml:reference "properties.date_cr_al"
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate pa:name;
    rr:objectMap [
      rml:reference "properties.name"
    ]
  ];

# rr:predicateObjectMap [
#   rr:predicate pa:wasNamedBy;
#   rr:objectMap [
#     rml:reference "properties.lga"
#     ]
#   ]

rr:predicateObjectMap [
  rr:predicate pa:wasNamedBy ;
  rr:objectMap [
    rr:IRI gkl_gaz:Department_for_Infrastructure_and_Transport_SA;
    ]
];

rr:predicateObjectMap [
  rr:predicate gkl_gaz:hasMetaData ;
   rr:objectMap [
    rr:parentTriplesMap <#MetaDataMapping>;
    rr:joinCondition [
      rr:child "properties.state";
      rr:parent "State"
      ];
      ];
].

#####################################################################
<#GazetterMap> a rr:TriplesMap;
 rml:logicalSource <#SA_GazetteerSites2020_DS>;

 rr:subjectMap [
    rr:template "http://example.com/SA/Gazetter/{name}";
    rr:class pa:Gazetteer;
  ].